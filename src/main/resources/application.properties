# ============================================================
# Servidor da aplicacao
# ============================================================
# Define a porta HTTP que o Spring Boot deve usar.
# No Render, a variavel PORT ela permanece injetada automaticamente.
server.port=${PORT:${SERVER_PORT:8080}}

# Detecta corretamente scheme/host atras do proxy (Render)
server.forward-headers-strategy=framework

# ============================================================
# Configuracao do JPA / Hibernate
# ============================================================
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
# Removido o dialect deprecado (Oracle12cDialect). Se quiser fixar, use:
# spring.jpa.database-platform=org.hibernate.dialect.OracleDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# Boa pratica em producao
spring.jpa.open-in-view=false

# ============================================================
# Pool de conexoes (HikariCP)
# ============================================================
# Mantem um pool pequeno, ideal para o Oracle ADB Always Free.
spring.datasource.hikari.pool-name=Hikari-Oracle
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL

# ============================================================
# Flyway - Migracao de banco de dados
# ============================================================
# Migra automaticamente os scripts SQL da pasta src/main/resources/db/migration
spring.flyway.enabled=true
spring.flyway.clean-disabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.default-schema=APP_LUIGARAH
spring.flyway.schemas=APP_LUIGARAH

# ============================================================
# Swagger / OpenAPI (springdoc)
# ============================================================
# UI do Swagger em /swagger-ui
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui
# Diga explicitamente qual definicao carregar
springdoc.swagger-ui.url=/v3/api-docs
# Endpoints dos docs
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/v3/api-docs
# Evita chamar validador remoto
springdoc.swagger-ui.validatorUrl=

# ============================================================
# CORS - Origens permitidas
# ============================================================
# Permite o acesso da aplicacao do front-end (local e producao)
app.cors.origens-permitidas=http://localhost:3000,https://luigarah.vercel.app

# ============================================================
# JWT - Autenticacao e Seguranca
# ============================================================
# Chave secreta para assinar tokens JWT (deve ser unica e segura em producao)
# Minimo 256 bits (32 caracteres) requerido para HS256
app.jwt.secret=${JWT_SECRET}

# Tempo de expiracao do token JWT em milissegundos (24 horas = 86400000ms)
app.jwt.expiration=${JWT_EXPIRATION:86400000}

# ============================================================
# Logs
# ============================================================
# Define o nivel de log para a aplicacao.
logging.level.com.luigarah=DEBUG

# ============================================================
# Storage - Cloudflare R2 (compatível com S3)
# ============================================================
# Configuracoes de armazenamento de imagens
# IMPORTANTE: storage.publicBaseUrl deve ser o dominio PUBLICO do R2
# Exemplo: https://pub-xxxxxx.r2.dev (criado no painel R2 -> Settings -> Public Access)
storage.bucket=${STORAGE_BUCKET:luigarah-prod}
storage.publicBaseUrl=${STORAGE_PUBLIC_BASE_URL:}
aws.region=${AWS_REGION:auto}
aws.s3.endpoint=${AWS_S3_ENDPOINT:}
aws.credentials.accessKey=${AWS_ACCESS_KEY_ID:}
aws.credentials.secretKey=${AWS_SECRET_ACCESS_KEY:}

# ============================================================
# Configuracao de upload multipart (limite de tamanho)
# ============================================================
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
