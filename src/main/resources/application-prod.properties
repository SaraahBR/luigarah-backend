# ============================================================
# Banco de Dados Oracle Autonomous Database (ADB)
# ============================================================
# Configuracao via TNS + Wallet
# O alias "luigarah_tp" vem do tnsnames.ora do wallet.
# O entrypoint.sh define automaticamente o TNS_ADMIN=/opt/app/wallet
# ============================================================

spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@luigarah_tp
spring.datasource.username=${ORACLE_USERNAME}
spring.datasource.password=${ORACLE_PASSWORD}

# Define o schema padrao (onde as tabelas serao criadas/consultadas)
spring.jpa.properties.hibernate.default_schema=APP_LUIGARAH

# ============================================================
# Armazenamento de Imagens - Cloudflare R2 (compativel com S3)
# ============================================================
# Este bloco define as credenciais e endpoint usados para upload de imagens
# no Cloudflare R2. As variaveis sao injetadas via Render (Environment).
#
# IMPORTANTE: storage.publicBaseUrl deve ser o dominio PUBLICO do R2
# Exemplo: https://pub-xxxxxx.r2.dev (criado no painel R2 -> Settings -> Public Access)
# ============================================================

# Nome do bucket (criado no painel R2)
storage.bucket=${STORAGE_BUCKET:luigarah-prod}

# URL publica base - DEVE SER O DOMINIO PUBLICO DO R2 (sem bucket no final)
# Configure a variavel STORAGE_PUBLIC_BASE_URL no Render com o valor do dominio publico
storage.publicBaseUrl=${STORAGE_PUBLIC_BASE_URL:}

# Regiao simbolica (R2 nao usa regiao real, mas o SDK exige um valor)
aws.region=auto

# Endpoint do servidor R2 (S3 compativel) - ENDPOINT PRIVADO para upload
aws.s3.endpoint=https://${R2_ACCOUNT_ID:aef01bde77cd4e5689cde7c9784a36ee}.r2.cloudflarestorage.com

# Credenciais de acesso (definidas nas variaveis de ambiente do Render)
aws.credentials.accessKey=${AWS_ACCESS_KEY_ID}
aws.credentials.secretKey=${AWS_SECRET_ACCESS_KEY}

# ============================================================
# Logs
# ============================================================
# Define o nivel de log para a aplicacao.
logging.level.com.luigarah=DEBUG

# ============================================================
# Upload de Arquivos (Spring)
# ============================================================
# Tamanho maximo por arquivo (5MB)
spring.servlet.multipart.max-file-size=5MB
# Tamanho maximo da requisicao (10MB para multiplos arquivos)
spring.servlet.multipart.max-request-size=10MB
